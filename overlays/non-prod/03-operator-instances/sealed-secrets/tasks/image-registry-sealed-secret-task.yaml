apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: image-registry-sealed-secret
spec:
  params:
    - name: SEALED_SECRETS_NAMESPACE
      type: string
      description: Namespace where Sealed Secrets is installed.
      default: sealed-secrets
    - name: SECRET_NAME
      type: string
      description: Name of the secret to produce.
    - name: SECRET_NAMESPACE
      type: string
      description: Namespace this secret will belong to.
    - name: REGISTRY_HOST
      type: string
      description: Image registry host (e.g. https://quay.io).
      default: "https://quay.io"
    - name: REGISTRY_USERNAME
      type: string
      description: Registry username.
    - name: REGISTRY_EMAIL
      type: string
      description: Email address associated with this registry account.
    - name: REGISTRY_PASSWORD
      type: string
      description: Registry password.
  steps:
    - name: generate-sealed-secret
      image: quay.io/pittar/kubeseal-ubi8:0.15
      imagePullPolicy: Always
      script: |
        #!/usr/bin/env sh

        tempsecret=$(oc create secret docker-registry $(params.SECRET_NAME) \
            --docker-server=$(params.REGISTRY_HOST) \
            --docker-username="$(params.REGISTRY_USERNAME)" \
            --docker-password="$(params.REGISTRY_PASSWORD)" \
            --docker-email="$(params.REGISTRY_EMAIL)" \
            -n $(params.SECRET_NAMESPACE) \
            -o json \
            --dry-run=client)

        tempsecret=$(echo "$tempsecret" | awk '/metadata/{print;print "  annotations:";next}1')
        tempsecret=$(echo "$tempsecret" | awk '/annotations/{print;print "    tekton.dev/docker-0: $(params.REGISTRY_HOST)";next}1')

        echo "$tempsecret"

        #echo "$tempsecret" | kubeseal --controller-namespace $(params.SEALED_SECRETS_NAMESPACE) > /tmp/$(params.SECRET_NAME).json

        #echo "Output Secret"
        #cat /tmp/$(params.SECRET_NAME).json
      resources: {}
